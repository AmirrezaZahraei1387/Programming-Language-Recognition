[['SNS=S"S"S"S~S`S!S@S#S$S%S^S&S*S(S)S-S+S|S\\S}S{S]S[S"S\'S:S=S;S?S/S>S<S"S"S"S', [['SYMBOLS']]], ['SNS=S"S"S"S~S`S!S@S#S$S%S^S&S*S(S)S-S+S|S\\S}S{S]S[S"S\'S:S=S;S?S/S>S<S"S"S"S#SNSNS', [['SYMBOLS_', 'without', 'space']]], ['S', [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]], ['SNS=S"SNS-SNS"S', [['RAW_DATA_PATH', 'raw', 'data'], ['UN_DATA_PATH', 'un', 'data']]], ['S"S"S"SNSNSNSNSNSNSNSNSNS', [['this', 'is', 'a', 'class', 'created', 'for', 'managing', 'the', 'paths'], ['the', 'un_data', 'is', 'empty', 'folder', 'for', 'the', 'program', 'result']]], ['SNSNSNSNSNSNSNS', [['that', 'are', 'in', 'the', 'data', 'we', 'have.']]], ['SNSNSNSNSNSNSNSNSNS', [['this', 'important', 'because', 'there', 'are', 'a', 'lot', 'of', 'data']]], ['SNSNSNSNSNSNSNSNS"S"S"S', [['and', 'their', 'path', 'will', 'become', 'too', 'messy', 'easily']]], ['SNSNS', [['import', 'pathlib'], ['import', 'os'], ['return', 'pathspl'], ['import', 'os'], ['import', 'tokenizer'], ['import', 'path_manager'], ['import', 'constants'], ['return', 'data'], ['return', 'index'], ['return', 'True'], ['return', 'False'], ['return', 'tokenized_text']]], ['SNSNS(SNS)S:S', [['def', 'get_absolute_path', 'path'], ['def', 'open_file', 'path'], ['def', 'is_empty', 'folder'], ['def', 'generalformataddspace', 'tokenized_statement']]], ['SNSNS(SNS)SNS(S)S', [['return', 'pathlib.Path', 'path', '.absolute']]], ['SNSNS(SNSNS)S:S', [['def', 'get_all_absolute_path', 'names_elements,', 'direct'], ['def', 'new_path_under_dir', 'path,', 'name'], ['def', 'search', 'array,', 'item'], ['def', 'main_prog', 'un_data,', 'raw_data']]], ['SNS=S[S]S', [['pathspl'], ['tokenized_texts'], ['tokenized_text'], ['word']]], ['SNSNSNSNS:S', [['for', 'p', 'in', 'names_elements'], ['for', 'p', 'in', 'self.path_spl'], ['for', 'element', 'in', 'array'], ['for', 'lang', 'in', 'program_path.supported_prog_langs'], ['for', 'statement', 'in', 'data'], ['if', 'search_result', 'is', 'None'], ['for', 'word', 'in', 'statement'], ['if', 'word', 'in', 'constants.SYMBOLS'], ['for', 'element', 'in', 'tokenized_statement'], ['if', 'element', 'in', 'constants.SYMBOLS_']]], ["SNS(SNS(SNS(SNS)S+S'S/S'S+SNS(SNS)S)S)S", [['pathspl.append', 'get_absolute_path', 'str', 'direct', 'str', 'p']]], ['SNSNS:S', [['class', 'PathManager'], ['following', 'url']]], ['SNSNS(SNSNSNS)S:S', [['def', '__init__', 'self,', 'path_raw_data,', 'path_un_data']]], ['SNS=SNS(SNS)S', [['self.path_raw_data', 'get_absolute_path', 'path_raw_data'], ['self.path_un_data', 'get_absolute_path', 'path_un_data'], ['names', 'os.listdir', 'p'], ['files', 'os.listdir', 'folder'], ['data', 'open_file', 'path_raw_data'], ['result', 'tokenizer.generalformataddspace', 't']]], ['SNS=SNS(SNS)S#SNSNSNSNSNSNS', [['self.supported_prog_langs', 'os.listdir', 'self.path_raw_data', 'we', 'assume', 'that', 'there', 'are', 'directories']]], ['S#SNSNSNSNSNSNSNSNSNSNSNSNS', [['in', 'the', 'raw', 'data', 'each', 'with', 'the', 'name', 'of', 'the', 'programing', 'language']]], ['S#SNSNSNSNSNSNSNSNSNSNS', [['from', 'now', 'on', 'spl', 'means', 'supported_programing_languages', 'to', 'avoid', 'extra', 'typings'], ['here', 'the', 'work', 'for', 'that', 'language', 'is', 'done,', 'and', 'so']]], ['S#SNSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNS', [['here', 'we', 'get', 'all', 'the', 'path', 'of', 'the', 'folders', 'in', 'the', 'raw', 'data,', 'and', 'we', 'save', 'in', 'self.path_spl']]], ['SNS=SNS(SNSNS)S', [['self.path_spl', 'get_all_absolute_path', 'self.supported_prog_langs,', 'self.path_raw_data'], ['program_path', 'path_manager.PathManager', 'raw_data,', 'un_data'], ['path_new', 'program_path.new_path_under_dir', 'program_path.path_un_data,', 'lang']]], ['SNS=S[S]S#SNSNSNSNSNSNSNSNSNSNSNSNSNSNSNS', [['self.path_sub_spl', 'this', 'list', 'will', 'hold', 'all', 'the', 'sub', 'files', 'of', 'the', 'folders', 'inside', 'the', 'raw', 'data']]], ['SNS(SNS(SNSNS)S)S', [['self.path_sub_spl.append', 'get_all_absolute_path', 'names,', 'p']]], ['S@SNS', [['staticmethod']]], ['S"S"S"SNSNSNSNSNSNSNSNSNSNSNSNS', [['this', 'will', 'get', 'path', 'and', 'a', 'name', 'then', 'it', 'will', 'concatenate', 'them']]], ['SNSNSNSNSNS"S"S"S', [['and', 'give', 'a', 'new', 'path.']]], ["SNSNS(SNS(SNS)S+S'S/S'S+SNS(SNS)S)S", [['return', 'get_absolute_path', 'str', 'path', 'str', 'name']]], ['S"S"S"SNSNSNSNSNSNSNSNSNSNS', [['this', 'is', 'the', 'file', 'that', 'the', 'data', 'preprocessing', 'will', 'be'], ['this', 'method', 'will', 'remove', 'the', 'files', 'and', 'folders', 'under', 'a']]], ['SNSNSNSNSNSNSNSNSNSNSNS', [['donne', 'here.', 'so', 'basically', 'we', 'upload', 'all', 'the', 'files', 'then', 'we']]], ['SNSNSNSNSNSNSNSNSNSNS-SNSNS"S"S"S', [['extract', 'the', 'syntax,', 'and', 'then', 'we', 'write', 'into', 'the', 'un', 'data', 'folder']]], ['SNSNS(SNS=SNSNS=S"SNS-SNS"SNSNS=S"SNS"S)SNSNS:S', [['with', 'open', 'file', 'path,', 'encoding', 'utf', '8', ',', 'mode', 'r', 'as', 'data_file']]], ['SNS=SNS(S)S', [['data', 'data_file.readlines']]], ['SNS(S)S', [['data_file.close'], ['file.close']]], ['SNS=S-SNS', [['index', '1'], ['index', '1']]], ['SNS+S=SNS', [['index', '1'], ['index', '1'], ['maked_name', 'word']]], ['SNSNS[SNS]S=S=SNS:S', [['if', 'element', '0', 'item']]], ['SNS"S"S"S', [['directory']]], ['SNSNSNS:S', [['if', 'not', 'files']]], ['SNSNSNSNSNSNSNSNSNSNSNS"S"S"S', [['and', 'raw', 'data', 'is', 'the', 'data', 'is', 'going', 'to', 'be', 'processed']]], ['SNSNSNSNS[SNS]S:S', [['for', 'path_raw_data', 'in', 'program_path.path_sub_spl', 'index']]], ['SNSNS!S=S"S\\SNS"SNSNS!S=S"S"S:S#SNSNSNSNSNSNSNSNS', [['if', 'statement', 'n', 'or', 'statement', 'checking', 'if', 'the', 'line', 'is', 'empty', 'or', 'no']]], ['SNS=SNS(SNS[S:S-SNS]S)S', [['t', 'tokenizer.tokenize', 'statement', '1']]], ['SNS=SNS(SNSNS[SNS]S)S#SNSNSNSNSNSNSNSNSNSNS', [['search_result', 'search', 'tokenized_texts,', 'result', '0', 'it', 'can', 'be', 'none', 'or', 'the', 'index', 'of', 'the', 'object']]], ['SNS(S[SNS[SNS]SNS[SNS[SNS]S]S]S)S', [['tokenized_texts.append', 'result', '0', ',', 'result', '1']]], ['SNS:S', [['else'], ['else']]], ['SNS[SNS]S[SNS]SNS(SNS[SNS]S)S', [['tokenized_texts', 'search_result', '1', '.append', 'result', '1']]], ['S#SNSNSNSNSNSNSNSNS', [['we', 'go', 'to', 'do', 'another', 'one', 'that', 'exist']]], ['SNS(SNS)S', [['os.mkdir', 'path_new'], ['tokenized_text.append', 'maked_name'], ['tokenized_text.append', 'word'], ['tokenized_text.append', 'maked_name'], ['word.append', 'element']]], ['SNS=SNS(SNS"SNS"S)S', [['path_text_file', 'program_path.new_path_under_dir', 'path_new,', 'data.txt']]], ['SNSNS(SNS"SNS"S)SNSNS:S', [['with', 'open', 'path_text_file,', 'a', 'as', 'file']]], ['SNS(SNS(SNS)S)S', [['file.write', 'str', 'tokenized_texts']]], ['SNS(SNSNS)S', [['main_prog', 'constants.UN_DATA_PATH,', 'constants.RAW_DATA_PATH']]], ['SNS(S"SNS"S)S', [['print', 'hello']]], ['SNS(S"SNS"SNS"SNS"SNS"SNS"S)S', [['print', 'good', ',', 'hello', ',', 'bye']]], ['SNS(SNS+SNS+SNS)S', [['print', '6', '5', '34']]], ['S#SNS', [['ffffffffffffffffff'], ['fffgggggggggggggggg']]], ['S"S"S"SNSNSNSNSNSNSNS', [['the', 'tokenizer', 'will', 'tokenize', 'the', 'text', 'into']]], ["SNS'SNSNSNSNSNSNSNSNSNS", [['it', 's', 'words,', 'and', 'it', 'will', 'separate', 'the', 'names', 'from']]], ['SNSNSNSNSNS', [['symbols', 'used', 'in', 'the', 'text.']]], ['SNSNSNSNSNSNS', [['for', 'more', 'imformations', 'go', 'to', 'the']]], ['SNS:S/S/SNS/SNS/SNS-SNS"S"S"S', [['https', 'github.com', 'AmirrezaZahraei1387', 'text', 'similarity']]], ['SNSNSNSNS', [['import', 'dataprepro.constants', 'as', 'constants']]], ['SNSNS(SNS:SNS)S:S', [['def', 'tokenize', 'statement', 'str']]], ['SNS=S"S"S', [['maked_name'], ['maked_name']]], ['SNSNS!S=S"S"S:S', [['if', 'maked_name'], ['if', 'maked_name'], ['elif', 'element']]], ['SNS=S"SNS"S', [['statement', 'S']]], ['SNS+S=SNS+S"SNS"S', [['statement', 'element', 'S']]], ['SNS+S=S"SNS"S', [['statement', 'NS']]], ['SNSNSNS', [['return', 'statement,', 'wor']]]]